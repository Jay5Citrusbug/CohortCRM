name: Playwright Tests

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      # âœ… Run tests with both HTML + JSON reporters
      - name: Run Playwright tests
        run: npx playwright test --reporter=html,json || true

      - name: Extract test summary
        id: summary
        continue-on-error: true
        run: |
          if [ ! -f "playwright-report/test-results.json" ]; then
            echo "Report file not found!"
            echo "total=0" >> $GITHUB_OUTPUT
            echo "passed=0" >> $GITHUB_OUTPUT
            echo "failed=0" >> $GITHUB_OUTPUT
            echo "skipped=0" >> $GITHUB_OUTPUT
            exit 0
          fi

          PASSED=$(jq '.stats.expected // 0' playwright-report/test-results.json)
          FAILED=$(jq '.stats.unexpected // 0' playwright-report/test-results.json)
          SKIPPED=$(jq '.stats.skipped // 0' playwright-report/test-results.json)
          TOTAL=$(( PASSED + FAILED + SKIPPED ))

          echo "passed=${PASSED}" >> $GITHUB_OUTPUT
          echo "failed=${FAILED}" >> $GITHUB_OUTPUT
          echo "skipped=${SKIPPED}" >> $GITHUB_OUTPUT
          echo "total=${TOTAL}" >> $GITHUB_OUTPUT

      - name: Prepare Report Timestamp
        run: echo "REPORT_TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Send Email Report via SMTP
        if: always()
        run: node .github/workflows/sendreport.js
        env:
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          TO_EMAIL: ${{ secrets.TO_EMAIL }}
          REPORT_TIMESTAMP: ${{ env.REPORT_TIMESTAMP }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          TOTAL: ${{ steps.summary.outputs.total }}
          PASSED: ${{ steps.summary.outputs.passed }}
          FAILED: ${{ steps.summary.outputs.failed }}
          SKIPPED: ${{ steps.summary.outputs.skipped }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_REPOSITORY: ${{ github.repository }}
